{"ast":null,"code":"var _jsxFileName = \"/Users/rapha/Documents/MapleApp/maple-ui/src/App.js\";\n// import { useState, useEffect } from 'react'\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getExp() {\n  // GET request using fetch with error handling\n  fetch('http://localhost:8080/exp/1/200/hyper').then(async response => {\n    const data = await response.json();\n\n    // check for error response\n    if (!response.ok) {\n      // get error message from body or default to response statusText\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n    this.setState({\n      totalReactPackages: data.total\n    });\n    return data;\n  }).catch(error => {\n    this.setState({\n      errorMessage: error.toString()\n    });\n    console.error('There was an error!', error);\n  });\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getExp,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getExp","fetch","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","totalReactPackages","total","catch","errorMessage","toString","console","App"],"sources":["/Users/rapha/Documents/MapleApp/maple-ui/src/App.js"],"sourcesContent":["// import { useState, useEffect } from 'react'\nimport './App.css';\n\nfunction getExp() {\n  // GET request using fetch with error handling\n  fetch('http://localhost:8080/exp/1/200/hyper')\n      .then(async response => {\n          const data = await response.json();\n\n          // check for error response\n          if (!response.ok) {\n              // get error message from body or default to response statusText\n              const error = (data && data.message) || response.statusText;\n              return Promise.reject(error);\n          }\n\n          this.setState({ totalReactPackages: data.total })\n          return data\n      })\n      .catch(error => {\n          this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n}\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <button onClick={getExp}>\n      Click me!\n    </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAAC;AAEnB,SAASA,MAAM,GAAG;EAChB;EACAC,KAAK,CAAC,uCAAuC,CAAC,CACzCC,IAAI,CAAC,MAAMC,QAAQ,IAAI;IACpB,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,EAAE;;IAElC;IACA,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MACd;MACA,MAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAO,IAAKL,QAAQ,CAACM,UAAU;MAC3D,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;IAChC;IAEA,IAAI,CAACK,QAAQ,CAAC;MAAEC,kBAAkB,EAAET,IAAI,CAACU;IAAM,CAAC,CAAC;IACjD,OAAOV,IAAI;EACf,CAAC,CAAC,CACDW,KAAK,CAACR,KAAK,IAAI;IACZ,IAAI,CAACK,QAAQ,CAAC;MAAEI,YAAY,EAAET,KAAK,CAACU,QAAQ;IAAG,CAAC,CAAC;IACjDC,OAAO,CAACX,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C,CAAC,CAAC;AACR;AACA,SAASY,GAAG,GAAG;EAEb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,OAAO,EAAEnB,MAAO;MAAA,UAAC;IAE3B;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,KATQmB,GAAG;AAWZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}